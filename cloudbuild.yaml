steps:
    - name: 'gcr.io/cloud-builders/docker'
      args:
        - 'build'
        - '-t'
        - 'gcr.io/${PROJECT_ID}/hello_kubernetes:${TAG_NAME}'
        - '.'
    - name: 'gcr.io/cloud-builders/kubectl'
      env:
        - CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}
        - CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}
        - KUBECONFIG=/kube/config
      entrypoint: 'sh'
      args:
        - '-c'
        - |
          cat << EOF > patch.yaml
          spec:
            template:
              spec:
                containers:
                  - name: hello-kubernetes
                    image: gcr.io/${PROJECT_ID}/hello_kubernetes:${TAG_NAME}
          EOF

          CLUSTER=$$(gcloud config get-value container/cluster)
          PROJECT=$$(gcloud config get-value core/project)
          ZONE=$$(gcloud config get-value compute/zone)

          gcloud container clusters get-credentials "$${CLUSTER}" \
            --project "$${PROJECT}" \
            --zone "$${ZONE}"

          kubectl patch --local -o yaml \
            -f kubernetes/deployments/hello_kubernetes.yml \
            -p "$(cat patch.yaml)" \
            > kubernetes/deployments/hello_kubernetes.yml

          kubectl apply -f

            #          git add kubernetes/deployments/hello_kubernetes.yml
            #          git commit -F- << EOF
            #          Update the deployment image version
            #
            #          Update to gcr.io/${PROJECT_ID}/hello_kubernetes:${TAG_NAME}
            #
            #          Build ID: ${BUILD_ID}
            #          EOF
            #
            #          git push origin master
images:
  - gcr.io/${PROJECT_ID}/hello_kubernetes:${TAG_NAME}
